DROP TABLE TEST_TABLE1;

-- NOT NULL : 해당 컬럼에는 NULL을 저장할 수 없다.
CREATE TABLE TEST_TABLE1(
	DATA1 NUMBER,
	DATA2 NUMBER NOT NULL
);

INSERT INTO TEST_TABLE1 (DATA1, DATA2)
VALUES (100, 101);

SELECT * FROM TEST_TABLE1;

INSERT INTO TEST_TABLE1 (DATA1)
VALUES (200); -- 오류 DATA2 NULL 안됨

INSERT INTO TEST_TABLE1 (DATA2)
VALUES (200); -- 정상 DATA1 NULL로 들어감

-- NOT NULL 제약조건은 어떤 오류인지 확인이 가능한데
-- 다른 제약조건은 오류가 났을 때 확인이 어려움 그래서 제약조건 이름을 설정하는게 좋음

-- UNIQUE : 중복된 값을 허용 X, NULL 허용
DROP TABLE TEST_TABLE2;

CREATE TABLE TEST_TABLE2(
	DATA1 NUMBER,
	DATA2 NUMBER CONSTRAINT TEST_TABLE2_DATA2_UK UNIQUE
);
-- UNIQUE 보통 UK라고 씀

INSERT INTO TEST_TABLE2 (DATA1, DATA2)
VALUES (100, 101);

INSERT INTO TEST_TABLE2 (DATA1, DATA2)
VALUES (200, 201);

INSERT INTO TEST_TABLE2 (DATA1, DATA2)
VALUES (300, 201); -- 오류 발생 무결성 제약 조건 제약조건 이름에 위배된다고 나옴

INSERT INTO TEST_TABLE2 (DATA1, DATA2)
VALUES (200, NULL); -- NULL 은 문제 x

INSERT INTO TEST_TABLE2 (DATA1)
VALUES (200);

-- PRIMARY KEY : 중복 허용 x NULL X
DROP TABLE TEST_TABLE3;

CREATE TABLE TEST_TABLE3(
	DATA1 NUMBER,
	DATA2 NUMBER CONSTRAINT TEST_TABLE3_DATA2_PK PRIMARY KEY
);

INSERT INTO TEST_TABLE3 (DATA1, DATA2)
VALUES (100, 101);

SELECT * FROM TEST_TABLE3;

INSERT INTO TEST_TABLE3 (DATA1, DATA2)
VALUES (100, 101); -- 무결성 제약 조건에 위배된다고 나옴

INSERT INTO TEST_TABLE3 (DATA1)
VALUES (100);

-- 외래키 : 특정 테이블의 컬럼을 참조하는 제약 조건
DROP TABLE TEST_TABLE4;
DROP TABLE TEST_TABLE5;

CREATE TABLE TEST_TABLE4 (
	DATA1 NUMBER CONSTRAINT TEST_TABLE4_PK PRIMARY KEY,
	DATA2 NUMBER NOT NULL
);

INSERT INTO TEST_TABLE4 (DATA1, DATA2)
VALUES (100, 101);

INSERT INTO TEST_TABLE4 (DATA1, DATA2)
VALUES (200, 201);

SELECT * FROM TEST_TABLE4;

CREATE TABLE TEST_TABLE5 (
	DATA3 NUMBER NOT NULL,
	DATA4 NUMBER CONSTRAINT TEST_TABLE5_DATA4_PK
				REFERENCES TEST_TABLE4(DATA1)
);

INSERT INTO TEST_TABLE5 (DATA3, DATA4)
VALUES (1, 100);

INSERT INTO TEST_TABLE5 (DATA3, DATA4)
VALUES (2, 100);

INSERT INTO TEST_TABLE5 (DATA3, DATA4)
VALUES (3, 200);

INSERT INTO TEST_TABLE5 (DATA3, DATA4)
VALUES (4, 200);

INSERT INTO TEST_TABLE5 (DATA3, DATA4)
VALUES (5, null);

INSERT INTO TEST_TABLE5 (DATA3)
VALUES (6);

SELECT * FROM TEST_TABLE5;

INSERT INTO TEST_TABLE5 (DATA3, DATA4)
VALUES (7, 300);

-- CHECK 제약조건 : 컬럼에 저장될 값을 지정한다.
DROP TABLE TEST_TABLE6;

CREATE TABLE TEST_TABLE6(
	DATA1 NUMBER CONSTRAINT TEST_TABLE6_DATA1_CK
				CHECK (DATA1 BETWEEN 1 AND 10),
	DATA2 NUMBER CONSTRAINT TESt_TABLE6_DATA2_CK
				CHECK (DATA2 IN(10, 20, 30))
);

INSERT INTO TEST_TABLE6 (DATA1, DATA2)
VALUES (1, 10);

INSERT INTO TEST_TABLE6 (DATA1, DATA2)
VALUES (2, 20);

SELECT * FROM TEST_TABLE6;

INSERT INTO TEST_TABLE6 (DATA1, DATA2)
VALUES (20, 10); -- 오류

INSERT INTO TEST_TABLE6 (DATA1, DATA2)
VALUES (1, 40);



















